/**
 * Message Builder Utility
 * Generates formatted WhatsApp messages for different scenarios
 */

// Messages in English
const messages = {
    en: {
      welcome: "ЁЯСЛ Welcome to *Sukoon Saarthi*! Your health companion.\n\nI'm here to help you manage your medications and monitor your health.",
      registration_welcome: (name) => `Hello ${name || 'there'}! Welcome to *Sukoon Saarthi* - your personal health assistant.\n\nLet's take a moment to set up your account.`,
      language_selection: "Please select your preferred language:\n\n1. English\n2. рд╣рд┐рдВрджреА (Hindi)",
      language_selection_error: "I didn't understand that choice. Please select a language:\n\n1. English\n2. рд╣рд┐рдВрджреА (Hindi)",
      age_question: "Great! Now, please tell me your age in years.",
      age_error: "Please enter a valid age between 1 and 120.",
      main_menu: "What would you like to do today?\n\n1. Manage Medications ЁЯТК\n2. Track Health ЁЯУИ\n3. View Reports ЁЯУЛ\n4. Family Settings ЁЯСк\n5. Help",
      help_menu: "Here's how I can help you:\n\nтАв Add medication: Type 'add medication'\nтАв Check schedule: Type 'schedule'\nтАв Record health: Type 'health'\nтАв Family access: Type 'family'\nтАв Talk to support: Type 'support'",
      not_implemented: "This feature is coming soon! Thank you for your patience.",
      generic_error: "I'm sorry, I couldn't process that. Please try again or type 'help' for assistance.",
      medication_add_start: "Let's add a new medication. You can either:\n\n1. Take a photo of your prescription\n2. Enter medication details manually",
    },
    // Hindi translations
    hi: {
      welcome: "ЁЯСЛ *рд╕реБрдХреВрди рд╕рд╛рдереА* рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╛рдереАред\n\nрдореИрдВ рдЖрдкрдХреА рджрд╡рд╛рдУрдВ рдФрд░ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХреА рдирд┐рдЧрд░рд╛рдиреА рдореЗрдВ рдЖрдкрдХреА рдорджрдж рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВред",
      registration_welcome: (name) => `рдирдорд╕реНрддреЗ ${name || 'рд╡рд╣рд╛рдБ'}! *рд╕реБрдХреВрди рд╕рд╛рдереА* рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ - рдЖрдкрдХрд╛ рд╡реНрдпрдХреНрддрд┐рдЧрдд рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рд╣рд╛рдпрдХред\n\nрдЖрдЗрдП рдЕрдкрдирд╛ рдЦрд╛рддрд╛ рд╕реЗрдЯрдЕрдк рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХреБрдЫ рд╕рдордп рд▓реЗрдВред`,
      language_selection: "рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдкрд╕рдВрджреАрджрд╛ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ:\n\n1. English\n2. рд╣рд┐рдВрджреА",
      language_selection_error: "рдореИрдВ рдЙрд╕ рд╡рд┐рдХрд▓реНрдк рдХреЛ рдирд╣реАрдВ рд╕рдордЭрд╛ред рдХреГрдкрдпрд╛ рдПрдХ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ:\n\n1. English\n2. рд╣рд┐рдВрджреА",
      age_question: "рдмрдврд╝рд┐рдпрд╛! рдЕрдм, рдХреГрдкрдпрд╛ рдореБрдЭреЗ рдЕрдкрдиреА рдЙрдореНрд░ рд╡рд░реНрд╖реЛрдВ рдореЗрдВ рдмрддрд╛рдПрдВред",
      age_error: "рдХреГрдкрдпрд╛ 1 рд╕реЗ 120 рдХреЗ рдмреАрдЪ рдПрдХ рд╡реИрдз рдЙрдореНрд░ рджрд░реНрдЬ рдХрд░реЗрдВред",
      main_menu: "рдЖрдЬ рдЖрдк рдХреНрдпрд╛ рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?\n\n1. рджрд╡рд╛рдПрдВ рдкреНрд░рдмрдВрдзрд┐рдд рдХрд░реЗрдВ ЁЯТК\n2. рд╕реНрд╡рд╛рд╕реНрдереНрдп рдЯреНрд░реИрдХ рдХрд░реЗрдВ ЁЯУИ\n3. рд░рд┐рдкреЛрд░реНрдЯ рджреЗрдЦреЗрдВ ЁЯУЛ\n4. рдкрд░рд┐рд╡рд╛рд░ рд╕реЗрдЯрд┐рдВрдЧреНрд╕ ЁЯСк\n5. рдорджрдж",
      help_menu: "рдореИрдВ рдЖрдкрдХреА рдЗрд╕ рдкреНрд░рдХрд╛рд░ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВ:\n\nтАв рджрд╡рд╛ рдЬреЛрдбрд╝реЗрдВ: 'рджрд╡рд╛ рдЬреЛрдбрд╝реЗрдВ' рдЯрд╛рдЗрдк рдХрд░реЗрдВ\nтАв рд╢реЗрдбреНрдпреВрд▓ рдЬрд╛рдВрдЪреЗрдВ: 'рд╢реЗрдбреНрдпреВрд▓' рдЯрд╛рдЗрдк рдХрд░реЗрдВ\nтАв рд╕реНрд╡рд╛рд╕реНрдереНрдп рд░рд┐рдХреЙрд░реНрдб рдХрд░реЗрдВ: 'рд╕реНрд╡рд╛рд╕реНрдереНрдп' рдЯрд╛рдЗрдк рдХрд░реЗрдВ\nтАв рдкрд░рд┐рд╡рд╛рд░ рдкрд╣реБрдВрдЪ: 'рдкрд░рд┐рд╡рд╛рд░' рдЯрд╛рдЗрдк рдХрд░реЗрдВ\nтАв рд╕рд╣рд╛рдпрддрд╛ рд╕реЗ рдмрд╛рдд рдХрд░реЗрдВ: 'рд╕рд╣рд╛рдпрддрд╛' рдЯрд╛рдЗрдк рдХрд░реЗрдВ",
      not_implemented: "рдпрд╣ рд╕реБрд╡рд┐рдзрд╛ рдЬрд▓реНрдж рд╣реА рдЖ рд░рд╣реА рд╣реИ! рдЖрдкрдХреЗ рдзреИрд░реНрдп рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред",
      generic_error: "рдореБрдЭреЗ рдЦреЗрдж рд╣реИ, рдореИрдВ рдЙрд╕реЗ рдкреНрд░реЛрд╕реЗрд╕ рдирд╣реАрдВ рдХрд░ рд╕рдХрд╛ред рдХреГрдкрдпрд╛ рдлрд┐рд░ рд╕реЗ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ рдпрд╛ рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП 'рдорджрдж' рдЯрд╛рдЗрдк рдХрд░реЗрдВред",
      medication_add_start: "рдЪрд▓рд┐рдП рдПрдХ рдирдИ рджрд╡рд╛ рдЬреЛрдбрд╝рддреЗ рд╣реИрдВред рдЖрдк рдпрд╛ рддреЛ:\n\n1. рдЕрдкрдиреЗ рдиреБрд╕реНрдЦреЗ рдХреА рдПрдХ рдлреЛрдЯреЛ рд▓реЗ рд╕рдХрддреЗ рд╣реИрдВ\n2. рджрд╡рд╛ рд╡рд┐рд╡рд░рдг рдореИрдиреНрдпреБрдЕрд▓ рд░реВрдк рд╕реЗ рджрд░реНрдЬ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ",
    }
  };
  
  /**
   * Build registration welcome message
   * 
   * @param {string} name - User's WhatsApp profile name
   * @returns {string} Formatted welcome message
   */
  exports.buildRegistrationWelcome = (name) => {
    return messages.en.registration_welcome(name);
  };
  
  /**
   * Build language selection message
   * 
   * @param {boolean} isError - Whether there was an error in previous selection
   * @returns {string} Language selection prompt
   */
  exports.buildLanguageSelection = (isError = false) => {
    return isError ? messages.en.language_selection_error : messages.en.language_selection;
  };
  
  /**
   * Build age question message
   * 
   * @param {string} language - User's preferred language (en/hi)
   * @returns {string} Age question prompt
   */
  exports.buildAgeQuestion = (language) => {
    return messages[language]?.age_question || messages.en.age_question;
  };
  
  /**
   * Build main menu message
   * 
   * @param {string} language - User's preferred language (en/hi)
   * @returns {string} Main menu options
   */
  exports.buildMainMenu = (language) => {
    return messages[language]?.main_menu || messages.en.main_menu;
  };
  
  /**
   * Build help menu message
   * 
   * @param {string} language - User's preferred language (en/hi)
   * @returns {string} Help menu options
   */
  exports.buildHelpMenu = (language) => {
    return messages[language]?.help_menu || messages.en.help_menu;
  };
  
  /**
   * Build generic error message
   * 
   * @param {string} language - User's preferred language (en/hi)
   * @returns {string} Generic error message
   */
  exports.buildGenericError = (language) => {
    return messages[language]?.generic_error || messages.en.generic_error;
  };
  
  /**
   * Build "not implemented yet" message
   * 
   * @param {string} language - User's preferred language (en/hi)
   * @returns {string} Not implemented message
   */
  exports.buildNotImplementedYet = (language) => {
    return messages[language]?.not_implemented || messages.en.not_implemented;
  };
  
  /**
   * Build medication add start message
   * 
   * @param {string} language - User's preferred language (en/hi)
   * @returns {string} Medication add start message
   */
  exports.buildMedicationAddStart = (language) => {
    return messages[language]?.medication_add_start || messages.en.medication_add_start;
  };
  
  /**
   * Build a medication reminder message
   * 
   * @param {string} language - User's preferred language (en/hi)
   * @param {Object} medication - Medication object
   * @param {string} time - Time of medication
   * @returns {string} Medication reminder message
   */
  exports.buildMedicationReminder = (language, medication, time) => {
    const message = {
      en: `тП░ *Medication Reminder*\n\nIt's time to take your medication: *${medication.name}*\n\nDosage: ${medication.dosage}\nTime: ${time}\n\nPlease reply with "taken" after you've taken your medication.`,
      hi: `тП░ *рджрд╡рд╛ рд░рд┐рдорд╛рдЗрдВрдбрд░*\n\nрдЖрдкрдХреА рджрд╡рд╛ рд▓реЗрдиреЗ рдХрд╛ рд╕рдордп рд╣реЛ рдЧрдпрд╛ рд╣реИ: *${medication.name}*\n\nрдЦреБрд░рд╛рдХ: ${medication.dosage}\nрд╕рдордп: ${time}\n\nрдХреГрдкрдпрд╛ рдЕрдкрдиреА рджрд╡рд╛ рд▓реЗрдиреЗ рдХреЗ рдмрд╛рдж "рд▓реЗ рд▓рд┐рдпрд╛" рдХреЗ рд╕рд╛рде рдЬрд╡рд╛рдм рджреЗрдВред`
    };
    
    return message[language] || message.en;
  };
  
  /**
   * Build a caregiver alert message
   * 
   * @param {string} language - Caregiver's preferred language (en/hi)
   * @param {Object} elderly - Elderly user object
   * @param {Object} medication - Medication object
   * @param {string} missedTime - Time the medication was missed
   * @returns {string} Caregiver alert message
   */
  exports.buildCaregiverMedicationAlert = (language, elderly, medication, missedTime) => {
    const message = {
      en: `ЁЯЪи *Medication Alert*\n\n${elderly.name} missed their scheduled medication: *${medication.name}*\n\nDosage: ${medication.dosage}\nScheduled time: ${missedTime}\n\nYou may want to check in with them.`,
      hi: `ЁЯЪи *рджрд╡рд╛ рдЕрд▓рд░реНрдЯ*\n\n${elderly.name} рдиреЗ рдЕрдкрдиреА рдирд┐рд░реНрдзрд╛рд░рд┐рдд рджрд╡рд╛ рдпрд╛рдж рдХреА: *${medication.name}*\n\nрдЦреБрд░рд╛рдХ: ${medication.dosage}\nрдирд┐рд░реНрдзрд╛рд░рд┐рдд рд╕рдордп: ${missedTime}\n\nрдЖрдк рдЙрдирд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░рдирд╛ рдЪрд╛рд╣ рд╕рдХрддреЗ рд╣реИрдВред`
    };
    
    return message[language] || message.en;
  };
  
  /**
   * Build a health report message
   * 
   * @param {string} language - User's preferred language (en/hi)
   * @param {Object} healthData - Health data object
   * @returns {string} Health report message
   */
  exports.buildHealthReport = (language, healthData) => {
    // This is a simplified version, actual implementation would format healthData in a readable way
    const message = {
      en: `ЁЯУК *Weekly Health Report*\n\nHere's a summary of your health this week:\n\nBlood Pressure: ${healthData.bp || 'Not recorded'}\nBlood Sugar: ${healthData.sugar || 'Not recorded'}\nWeight: ${healthData.weight || 'Not recorded'}\n\nMedication Adherence: ${healthData.adherencePercentage}%`,
      hi: `ЁЯУК *рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд░рд┐рдкреЛрд░реНрдЯ*\n\nрдЗрд╕ рд╕рдкреНрддрд╛рд╣ рдЖрдкрдХреЗ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХрд╛ рд╕рд╛рд░рд╛рдВрд╢ рдпрд╣рд╛рдВ рд╣реИ:\n\nрд░рдХреНрддрдЪрд╛рдк: ${healthData.bp || 'рджрд░реНрдЬ рдирд╣реАрдВ'}\nрд░рдХреНрдд рд╢рд░реНрдХрд░рд╛: ${healthData.sugar || 'рджрд░реНрдЬ рдирд╣реАрдВ'}\nрд╡рдЬрди: ${healthData.weight || 'рджрд░реНрдЬ рдирд╣реАрдВ'}\n\nрджрд╡рд╛ рдЕрдиреБрдкрд╛рд▓рди: ${healthData.adherencePercentage}%`
    };
    
    return message[language] || message.en;
  };